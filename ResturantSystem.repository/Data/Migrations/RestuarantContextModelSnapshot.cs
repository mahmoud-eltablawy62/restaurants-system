// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResturantSystem.repository.Data;

#nullable disable

namespace ResturantSystem.repository.Data.Migrations
{
    [DbContext(typeof(RestuarantContext))]
    partial class RestuarantContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ResturantSystem.core.Entities.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ResId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResId")
                        .IsUnique();

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("ResturantSystem.core.Entities.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal (18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("Menu_item");
                });

            modelBuilder.Entity("ResturantSystem.core.Entities.Resturant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.ToTable("Resturants");
                });

            modelBuilder.Entity("ResturantSystem.core.Entities.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ResturantId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal (18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ResturantId");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("ResturantSystem.core.Entities.Table", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasAnnotation("Range", new[] { 1, 8 });

                    b.Property<bool>("IsOccupied")
                        .HasColumnType("bit");

                    b.Property<int>("Number")
                        .HasColumnType("int")
                        .HasAnnotation("Range", new[] { 1, 40 });

                    b.Property<int>("ResturantId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResturantId");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("ResturantSystem.core.Entities.Menu", b =>
                {
                    b.HasOne("ResturantSystem.core.Entities.Resturant", "Res")
                        .WithOne("Menus")
                        .HasForeignKey("ResturantSystem.core.Entities.Menu", "ResId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Res");
                });

            modelBuilder.Entity("ResturantSystem.core.Entities.MenuItem", b =>
                {
                    b.HasOne("ResturantSystem.core.Entities.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("ResturantSystem.core.Entities.Staff", b =>
                {
                    b.HasOne("ResturantSystem.core.Entities.Resturant", "Resturant")
                        .WithMany()
                        .HasForeignKey("ResturantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resturant");
                });

            modelBuilder.Entity("ResturantSystem.core.Entities.Table", b =>
                {
                    b.HasOne("ResturantSystem.core.Entities.Resturant", "Resturant")
                        .WithMany()
                        .HasForeignKey("ResturantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Resturant");
                });

            modelBuilder.Entity("ResturantSystem.core.Entities.Resturant", b =>
                {
                    b.Navigation("Menus")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
